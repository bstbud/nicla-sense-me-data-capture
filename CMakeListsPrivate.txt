# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "nicla_sense_me" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

set(CLION_SVD_FILE_PATH "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/platforms/nordicnrf52/misc/svd/nrf52.svd" CACHE FILEPATH "Peripheral Registers Definitions File" FORCE)

SET(CMAKE_C_COMPILER "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/bin/arm-none-eabi-gcc.exe")
SET(CMAKE_CXX_COMPILER "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/bin/arm-none-eabi-g++.exe")
SET(CMAKE_CXX_FLAGS "-Wvla -fno-rtti -std=gnu++14 -DAPPLICATION_ADDR=0x10000 -DAPPLICATION_SIZE=0x70000 -DMBED_MINIMAL_PRINTF -DMBED_RAM_SIZE=0x10000 -DMBED_RAM_START=0x20000000 -DMBED_ROM_SIZE=0x80000 -DMBED_ROM_START=0x0 -DMBED_TRAP_ERRORS_ENABLED=1 -Os -Wall -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -c -fdata-sections -ffunction-sections -fmessage-length=0 -fno-exceptions -fomit-frame-pointer -funsigned-char -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -mthumb -iprefix$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/cores/arduino @$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/variants/NICLA/includes.txt -nostdlib")
SET(CMAKE_C_FLAGS "-std=gnu11 -DAPPLICATION_ADDR=0x10000 -DAPPLICATION_SIZE=0x70000 -DMBED_MINIMAL_PRINTF -DMBED_RAM_SIZE=0x10000 -DMBED_RAM_START=0x20000000 -DMBED_ROM_SIZE=0x80000 -DMBED_ROM_START=0x0 -DMBED_TRAP_ERRORS_ENABLED=1 -Os -Wall -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -c -fdata-sections -ffunction-sections -fmessage-length=0 -fno-exceptions -fomit-frame-pointer -funsigned-char -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -mthumb -iprefix$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/cores/arduino @$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/variants/NICLA/includes.txt -nostdlib")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)

if (CMAKE_BUILD_TYPE MATCHES "nicla_sense_me")
    add_definitions(-D'PLATFORMIO=50101')
    add_definitions(-D'ARDUINO_NICLA')
    add_definitions(-D'ARDUINO_ARCH_NRF52832')
    add_definitions(-D'ARM_MATH_CM4')
    add_definitions(-D'BOARD_PCA10040')
    add_definitions(-D'__CMSIS_RTOS')
    add_definitions(-D'CMSIS_VECTAB_VIRTUAL')
    add_definitions(-D'CMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"')
    add_definitions(-D'COMPONENT_FLASHIAP=1')
    add_definitions(-D'COMPONENT_SPIF=1')
    add_definitions(-D'CONFIG_NFCT_PINS_AS_GPIOS')
    add_definitions(-D'__CORTEX_M4')
    add_definitions(-D'DEVICE_ANALOGIN=1')
    add_definitions(-D'DEVICE_FLASH=1')
    add_definitions(-D'DEVICE_I2C=1')
    add_definitions(-D'DEVICE_I2C_ASYNCH=1')
    add_definitions(-D'DEVICE_I2CSLAVE=1')
    add_definitions(-D'DEVICE_INTERRUPTIN=1')
    add_definitions(-D'DEVICE_ITM=1')
    add_definitions(-D'DEVICE_LPTICKER=1')
    add_definitions(-D'DEVICE_PORTIN=1')
    add_definitions(-D'DEVICE_PORTINOUT=1')
    add_definitions(-D'DEVICE_PORTOUT=1')
    add_definitions(-D'DEVICE_PWMOUT=1')
    add_definitions(-D'DEVICE_SERIAL=1')
    add_definitions(-D'DEVICE_SERIAL_ASYNCH=1')
    add_definitions(-D'DEVICE_SERIAL_FC=1')
    add_definitions(-D'DEVICE_SLEEP=1')
    add_definitions(-D'DEVICE_SPI=1')
    add_definitions(-D'DEVICE_SPI_ASYNCH=1')
    add_definitions(-D'DEVICE_SYSTICK_CLK_OFF_DURING_SLEEP=1')
    add_definitions(-D'DEVICE_TRNG=1')
    add_definitions(-D'DEVICE_USTICKER=1')
    add_definitions(-D'FEATURE_BLE=1')
    add_definitions(-D'__FPU_PRESENT=1')
    add_definitions(-D'__MBED__=1')
    add_definitions(-D'MBED_BUILD_TIMESTAMP=1637229730.5635056')
    add_definitions(-D'__MBED_CMSIS_RTOS_CM')
    add_definitions(-D'MBED_MPU_CUSTOM')
    add_definitions(-D'MBED_TICKLESS')
    add_definitions(-D'NRF52')
    add_definitions(-D'NRF52_PAN_12')
    add_definitions(-D'NRF52_PAN_15')
    add_definitions(-D'NRF52_PAN_20')
    add_definitions(-D'NRF52_PAN_30')
    add_definitions(-D'NRF52_PAN_31')
    add_definitions(-D'NRF52_PAN_36')
    add_definitions(-D'NRF52_PAN_51')
    add_definitions(-D'NRF52_PAN_53')
    add_definitions(-D'NRF52_PAN_54')
    add_definitions(-D'NRF52_PAN_55')
    add_definitions(-D'NRF52_PAN_58')
    add_definitions(-D'NRF52_PAN_62')
    add_definitions(-D'NRF52_PAN_63')
    add_definitions(-D'NRF52_PAN_64')
    add_definitions(-D'SWI_DISABLE0')
    add_definitions(-D'TARGET_CORDIO')
    add_definitions(-D'TARGET_CORDIO_LL')
    add_definitions(-D'TARGET_CORTEX')
    add_definitions(-D'TARGET_CORTEX_M')
    add_definitions(-D'TARGET_LIKE_CORTEX_M4')
    add_definitions(-D'TARGET_LIKE_MBED')
    add_definitions(-D'TARGET_M4')
    add_definitions(-D'TARGET_MCU_NRF52832')
    add_definitions(-D'TARGET_NAME=NICLA')
    add_definitions(-D'TARGET_NICLA')
    add_definitions(-D'TARGET_NORDIC')
    add_definitions(-D'TARGET_NORDIC_CORDIO')
    add_definitions(-D'TARGET_NRF52')
    add_definitions(-D'TARGET_NRF52832')
    add_definitions(-D'TARGET_NRF5x')
    add_definitions(-D'TARGET_RELEASE')
    add_definitions(-D'TARGET_RTOS_M4_M7')
    add_definitions(-D'TARGET_SDK_15_0')
    add_definitions(-D'TARGET_SOFTDEVICE_NONE')
    add_definitions(-D'TOOLCHAIN_GCC')
    add_definitions(-D'TOOLCHAIN_GCC_ARM')
    add_definitions(-D'MBED_NO_GLOBAL_USING_DIRECTIVE=1')
    add_definitions(-D'USE_ARDUINO_PINOUT')
    add_definitions(-D'ARDUINO=10810')
    add_definitions(-D'ARDUINO_ARCH_MBED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/cores/arduino")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/cores/arduino/api/deprecated")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/cores/arduino/api/deprecated-avr-comp")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/variants/NICLA")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Ethernet/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Himax_HM01B0")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/KernelDebug/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/MRI/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Nano33BLE_System/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Nicla_System/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/PDM/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_Audio/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_Camera/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_SDCARD/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_SDRAM/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_System/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_Video/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_lvgl/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/RPC/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/SFU/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/SPI")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Scheduler/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/SocketWrapper/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/ThreadDebug/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/USBAudio")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/USBHID/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/USBHOST/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/USBMSD/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/WiFi/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/Wire")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/doom/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/ea_malloc")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/mbed-memory-status")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/openamp_arduino/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-mbed/libraries/rpclib/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/arm-none-eabi/include/c++/8.2.1")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/arm-none-eabi/include/c++/8.2.1/arm-none-eabi")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/lib/gcc/arm-none-eabi/8.2.1/include")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/lib/gcc/arm-none-eabi/8.2.1/include-fixed")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi@1.80201.190214/arm-none-eabi/include")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nicla_sense_me/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
